<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://besthai.github.io</id>
    <title>HAI</title>
    <updated>2020-03-08T05:15:14.971Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://besthai.github.io"/>
    <link rel="self" href="https://besthai.github.io/atom.xml"/>
    <subtitle>浮云游子意，落日故人情</subtitle>
    <logo>https://besthai.github.io/images/avatar.png</logo>
    <icon>https://besthai.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, HAI</rights>
    <entry>
        <title type="html"><![CDATA[私有化部署代码服务器]]></title>
        <id>https://besthai.github.io/post/code_manager/</id>
        <link href="https://besthai.github.io/post/code_manager/">
        </link>
        <updated>2019-03-15T04:08:49.000Z</updated>
        <content type="html"><![CDATA[<h2 id="〇-简介">〇、简介</h2>
<ul>
<li>
<p>可以提供的服务：</p>
<ul>
<li>
<p>高效地管理代码</p>
</li>
<li>
<p>GitHub风格</p>
</li>
<li>
<p>git远程连接</p>
</li>
</ul>
</li>
</ul>
<ul>
<li>
<p>该系统的组成 :</p>
<ul>
<li>
<p>Gitlab（代码管理）：<a href="https://about.gitlab.com/">https://about.gitlab.com/</a></p>
</li>
<li>
<p>Poste.io（邮件服务）：<a href="https://www.poste.io/">https://www.poste.io/</a></p>
</li>
<li>
<p>Nginx（反向代理）：<a href="http://nginx.org/">http://nginx.org/</a></p>
</li>
</ul>
</li>
</ul>
<h2 id="一-部署要求">一、部署要求</h2>
<ul>
<li>
<p><strong>CPU两核，内存4G以上</strong></p>
</li>
<li>
<p>如何查看 Linux 硬件状况：</p>
<ul>
<li>
<p>查看CPU状况：<code>cat /proc/cpuinfo</code></p>
</li>
<li>
<p>查看内存状况：<code>cat /proc/meminfo</code> 或者 <code>free -h</code></p>
</li>
</ul>
</li>
<li>
<p>最直观的方法（需要安装 <code>htop</code>）：</p>
<ul>
<li>
<p>Ubuntu系统：<code>apt-get install -y htop</code></p>
</li>
<li>
<p>Centos系统：<code>yum install -y htop</code></p>
</li>
<li>
<p>然后直接运行：<code>htop</code></p>
</li>
</ul>
</li>
</ul>
<h2 id="二-快速部署">二、快速部署</h2>
<ul>
<li>
<p>下载：</p>
<ul>
<li>
<p>Git-HTTPS 方式：<code>git clone https://github.com/bestHAI/gitlab.git</code></p>
</li>
<li>
<p>Git-SSH 方式：<code>git clone git@github.com:bestHAI/gitlab.git</code></p>
</li>
<li>
<p>zip压缩包：<code>wget https://github.com/bestHAI/gitlab/archive/1.0.0.zip</code></p>
</li>
<li>
<p>gz压缩包：<code>wget https://github.com/bestHAI/gitlab/archive/1.0.0.tar.gz</code></p>
</li>
</ul>
</li>
<li>
<p>启动：</p>
<ul>
<li>
<p>先进入上面下载好的gitlab工程目录，如果是压缩包需要自行解压</p>
</li>
<li>
<p><code>chmod +x auto_run.sh &amp;&amp; ./auto_run.sh 【IP】 【域名】 【名称】</code></p>
</li>
</ul>
</li>
<li>
<p>参数：</p>
<ul>
<li>
<p>三个参数，缺一不可，因为都至关重要的</p>
</li>
<li>
<p>IP：服务器的IP地址，这个一定根据实际填</p>
</li>
<li>
<p>域名：部署成功后，用户访问的域名，可自定义</p>
</li>
<li>
<p>名称：可以是公司名称或者单位名称，会在首页上显示</p>
</li>
</ul>
</li>
<li>
<p>命令：</p>
<ul>
<li><code>[ ]</code> 内为变量，请自行更改</li>
</ul>
<pre><code class="language-bash">wget https://github.com/bestHAI/gitlab/archive/1.0.0.tar.gz &amp;&amp; \
tar zxvf 1.0.0.tar.gz &amp;&amp; mv gitlab-1.0.0/ gitlab &amp;&amp; cd gitlab/ &amp;&amp; \
chmod +x auto_run.sh &amp;&amp; ./auto_run.sh [IP] [域名] [名称]
</code></pre>
</li>
</ul>
<h2 id="三-开放的端口">三、开放的端口</h2>
<ul>
<li>
<p><code>22</code>：Gitlab 的 SSH 端口</p>
</li>
<li>
<p><code>80</code>：Gitlab 的 http 默认端口</p>
</li>
<li>
<p><code>443</code>：Gitlab 的 https 默认端口</p>
</li>
<li>
<p><code>9000</code>：portainer 服务端口</p>
</li>
</ul>
<h2 id="四-配置文件">四、配置文件</h2>
<ul>
<li>
<p>以下是几个重要的配置文件的具体路径：</p>
<ul>
<li>
<p><code>./gitlab/config/gitlab.rb</code>：Gitlab 的详细配置文件</p>
</li>
<li>
<p><code>./gitlab-runner/config/config.toml</code>：Gitlab-runner 的配置文件</p>
</li>
<li>
<p><code>./nginx/nginx.conf</code>：Nginx 的配置文件</p>
</li>
</ul>
</li>
</ul>
<h2 id="五-服务架构">五、服务架构</h2>
<figure data-type="image" tabindex="1"><img src="https://github.com/bestHAI/gitlab/blob/master/index/gitlab/src/server_architecture.png" alt="" loading="lazy"></figure>
<h2 id="六-工程目录结构">六、工程目录结构</h2>
<pre><code class="language-text">   ./--- （工程根目录）
      |
      |--- ca/   (生成和保存SSL证书服务)
      |      |
      |      |--- auto_ca.sh (自动生成自签证书的脚本)
      |
      |--- gitlab/   (gitlab的工作目录)
      |      |
      |      |--- backup/  （备份目录）
      |      |
      |      |--- config/  （配置目录）
      |      |      |
      |      |      |--- gitlab.rb  （当前 gitlab 的配置文件）
      |      |      |
      |      |      |--- gitlab.rb.template  （原版 gitlab 的配置文件模板）
      |      |
      |      |--- data/  （数据目录）
      |      |
      |      |--- logs/  （日志目录）
      |
      |--- gitlab-runner/   (gitlab-runner 的工作目录)
      |      |
      |      |--- ci_example/  （ci 的例子）
      |      |
      |      |--- config/  （配置目录）
      |             |
      |             |--- config.toml  （当前 gitlab-runner 的配置文件）
      |
      |--- images/   (构建一些自定义的docker镜像)
      |      |
      |      |--- docker_ssh/  （可以远程 SSH 登陆的镜像，可以开放给成员作为编译用）
      |      |      |
      |      |      |--- docker_ssh_centos/  （纯 centos 系统）
      |      |      |
      |      |      |--- docker_ssh_centos_python/  （预装python 3.5.3 的 centos 系统）
      |      |      |
      |      |      |--- docker_ssh_ubuntu/  （纯 Ubuntu 系统）
      |      |      |
      |      |      |--- docker_ssh_ubuntu_python/  （预装python 3.5.3 的 Ubuntu 系统）
      |      |
      |      |--- gitlab-runner/  （gitlab-runner所需的镜像）
      |             |
      |             |--- python-ai/  （用于python-ai 的 gitlab-runner 的镜像）
      |             |
      |             |--- python-web/  （用于python-web 的 gitlab-runner 的镜像）
      |
      |--- index/  （网站首页目录，提供导航和帮助）
      |      |
      |      |--- gitlab/  （gitlab 帮助文档）
      |      |
      |      |--- start/  （初次进入网站的导航，进行域名解析配置）
      |
      |--- logs/  （系统日志目录，如：系统初始化、定时备份等日志）
      |
      |--- mail/  （邮件服务的工作目录）
      |
      |--- nginx/  （Nginx 均衡负载和反向代理工作目录）
      |      |
      |      |--- nginx.conf  （nginx 配置文件）
      |
      |--- portainer/  （docker可视化服务的工作目录）
      |
      |--- tools/  （存放一些简化系统运维的管理脚本）
      |
      |--- auto_run.sh  （自动启动服务的脚本）
      |
      |--- code_server_stack.yml （整个系统的 yml 部署文件）

</code></pre>
<h2 id="七-日常维护常用命令">七、日常维护常用命令</h2>
<ul>
<li>
<p>首次启动： <code>chmod +x auto_run.sh &amp;&amp; ./auto_run.sh 【IP】 【域名】 【名称】</code></p>
<ul>
<li>
<p>【IP】：部署服务的 ipv4 地址</p>
</li>
<li>
<p>【域名】：服务启动后，通过该域名来访问的，可以按需要来取，但必须符合 <strong>域名</strong> 的命名规则（如：myserver.com，最好都用纯英文小写字母，中间不要有其他符号和空格）</p>
</li>
<li>
<p>【名称】：服务器的名称，这个可以根据需要取，中英文均可</p>
</li>
</ul>
</li>
<li>
<p>非初次启动命令： <code>./auto_run.sh</code></p>
<ul>
<li>因为系统比较大，启动服务也较多，会花大概5到10分钟启动</li>
</ul>
</li>
<li>
<p>停止</p>
<ul>
<li>
<p>进入存放管理脚本的目录：<code>cd tools/</code></p>
</li>
<li>
<p>停止脚本：<code>./down.sh</code></p>
</li>
<li>
<p>再次启动：<code>./up.sh</code></p>
</li>
</ul>
</li>
<li>
<p>监控</p>
<ul>
<li>
<p>进入存放管理脚本的目录：<code>cd tools/</code></p>
</li>
<li>
<p>整体情况：<code>./ps.sh</code></p>
</li>
<li>
<p>单个日志：<code>./log 【容器名称】</code></p>
</li>
<li>
<p>【容器名称】有：nginx、gitlab-ce、gitlab-runner、mail、portainer</p>
</li>
</ul>
</li>
<li>
<p>管理</p>
<ul>
<li>
<p>进入存放管理脚本的目录：<code>cd tools/</code></p>
</li>
<li>
<p>进入容器脚本：<code>./exec.sh 【容器名称】 【可选命令】</code></p>
</li>
<li>
<p>【容器名称】有：nginx、gitlab-ce、gitlab-runner、mail、portainer</p>
</li>
<li>
<p>【可选命令】：（1）当该参数为空时，会直接进入对应的容器。（2）当该参数不为空时，只返回执行的结果，而不会进入容器内部。</p>
</li>
</ul>
</li>
</ul>
<h2 id="八-更多帮助">八、更多帮助</h2>
<ul>
<li><a href="https://github.com/bestHAI/gitlab/wiki">Wiki文档</a></li>
</ul>
]]></content>
    </entry>
</feed>